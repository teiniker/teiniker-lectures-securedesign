Exercise: Transport Layer Security (RESTful Service)
-------------------------------------------------------------------------------

You have given a working REST service. Just to verify that all settings are
working, perform the following tasks:

A) Deploy & Test the REST Service
    - Start the database server and import the SQL script: setup.sql
        $ sudo systemctl start mariadb.service
        $ mysql -u student -pstudent
        MariaDB [(none)]> use testdb;

    - Configure Wildfly to provide a Datasource named MySqlDS
      (see Wildfly-Configurations/datasource)

    - Start Wildfly
        $ bin/standalone.sh

    - Deploy the REST service into Wildfly
        $ mvn wildfly:deploy

    - Use curl to access the REST service
        $ curl -i http://localhost:8080/REST-EJB-UserService-TLS-Exercise/v1/users

    - Use SoapUI to access the REST Service

B) Configure the REST Service to use TLS
    - Configure Wildfly to use a HTTPS connector
      (see: Wildfly-Configurations/https)

    - Add a <security-constraint> to the web.xml file and redeploy the service.
        <security-constraint>
            <web-resource-collection>
                <web-resource-name>All resources</web-resource-name>
                <url-pattern>/*</url-pattern>
            </web-resource-collection>
            <user-data-constraint>
                <transport-guarantee>CONFIDENTIAL</transport-guarantee>
            </user-data-constraint>
        </security-constraint>

C) Experiments
    1. Access the service via HTTP and analyze the response message:
        $ curl -i http://localhost:8080/REST-EJB-UserService-TLS-Exercise/v1/users

    2. Access the service via HTTPS and analyze the used TLS connection:
        $ curl -v -k https://localhost:8443/REST-EJB-UserService-TLS-Exercise/v1/users

D) Code Review
    Analyze the source code of the example to understand how it is working.

E) Related Patterns
    Compare this implementation the following Service Design Patterns:
    - Resource API
    - Common Versioning Strategies

Tip: Don't forget to undeploy the service after your experiments.
    $ mvn wildfly:undeploy

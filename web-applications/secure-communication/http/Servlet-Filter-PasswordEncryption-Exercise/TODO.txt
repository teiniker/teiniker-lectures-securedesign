Exercise: Servlet Filter - Password Encryption
-------------------------------------------------------------------------------

Implement a "EncryptionFilter" that reads the plain text password from the request
object, calculates a SHA-256 hash value and encodes the resulting bytes into a 
base64 string. This hashed password string should be passed to the controller 
servlet.

To change the value of a request parameter, we have to use a  "PasswordWrapper", 
which returns the changed password value (this wrapper is already implemented!)

Tipp:
	PasswordWrapper wrapper = new PasswordWrapper((HttpServletRequest)request);
	chain.doFilter(wrapper, response);


To calculate the hash value use the following code snippet:

	MessageDigest algorithm = MessageDigest.getInstance("SHA-256");
	algorithm.update(message.getBytes("UTF-8"));
	byte[] bytes = algorithm.digest();

For base64 encoding you can use:

	Base64.encodeBase64String(bytes);
	

To test your implementation you can use the following credentials:

http://localhost:8080/http://localhost:8080/Servlet-Filter-PasswordEncryption-Exercise/

	student/student => Welcome, student!
	student/blah	=> Sorry, either your username or password is wrong...

	homer/homer     => Welcome, homer
	homer/blah      => Sorry, either your username or password is wrong...

Note that the pre-calculated hash values are already stored in the "LoginServiceImpl"
class.
